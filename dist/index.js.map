{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormTemplate = (props)=>{\n\n  let { \n    LoadingComponent, \n    MutationComponent,\n    makeMutationProps, \n    QueryComponent,\n    queryProps, \n    FormComponent,\n    makeFormProps,\n  } = props\n\n  return (\n    <QueryComponent {...queryProps}>{\n      (queryResponse)=>{\n        if(queryResponse && queryResponse.loading) return <LoadingComponent message='loading'/>;\n        let mutationProps = makeMutationProps ? makeMutationProps(queryResponse) : {}\n        return (<MutationComponent {...mutationProps}>{(mutate,mutationResponse)=>{\n          let formProps = makeFormProps ? makeFormProps(queryResponse, mutate, mutationResponse) : {}\n          return <FormComponent {...formProps} children={ renderProps => props.children(\n            { formProps, renderProps, queryProps, queryResponse, mutationProps, mutationResponse }\n          )}/> \n        }}</MutationComponent>)\n      }\n    }</QueryComponent>\n  )\n}\n\n\n// anything that can and should be customized by platform lives here, along with any defaults\nFormTemplate.defaultProps = {\n  LoadingComponent : ({ children })=><Fragment>Loading</Fragment>,\n  MutationComponent : (props)=>props.makeMutationProps ? props.Mutation : props.children(null),\n  QueryComponent : (props)=>props.makeQueryProps ? props.Query  : props.children(null,null),\n  FormComponent : (props)=>props.makeFormProps ? props.Formik : props.children(props),\n}\n\nFormTemplate.propTypes = {\n  LoadingComponent : PropTypes.func, \n  MutationComponent : PropTypes.func, \n  makeMutationProps : PropTypes.func, \n  QueryComponent : PropTypes.func, \n  queryProps : PropTypes.object, \n  FormComponent : PropTypes.func, \n  makeFormProps : PropTypes.func, \n}\n\nexport default FormTemplate"],"names":["FormTemplate","props","LoadingComponent","MutationComponent","makeMutationProps","QueryComponent","queryProps","FormComponent","makeFormProps","React","queryResponse","loading","mutationProps","mutate","mutationResponse","formProps","children","renderProps","defaultProps","Mutation","makeQueryProps","Query","Formik","propTypes","PropTypes","func","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAS;MAG1BC,gBAH0B,GAUxBD,KAVwB,CAG1BC,gBAH0B;MAI1BC,iBAJ0B,GAUxBF,KAVwB,CAI1BE,iBAJ0B;MAK1BC,iBAL0B,GAUxBH,KAVwB,CAK1BG,iBAL0B;MAM1BC,cAN0B,GAUxBJ,KAVwB,CAM1BI,cAN0B;MAO1BC,UAP0B,GAUxBL,KAVwB,CAO1BK,UAP0B;MAQ1BC,aAR0B,GAUxBN,KAVwB,CAQ1BM,aAR0B;MAS1BC,aAT0B,GAUxBP,KAVwB,CAS1BO,aAT0B;;;SAa1BC;kBAAA;cAAA;cACGC,aAAD,EAAiB;UACZA,iBAAiBA,cAAcC,OAAlC,EAA2C,OAAOF,6BAAC,gBAAD,IAAkB,SAAQ,SAA1B,GAAP;UACvCG,gBAAgBR,oBAAoBA,kBAAkBM,aAAlB,CAApB,GAAuD,EAA3E;aACQD;yBAAA;qBAAA;kBAAwCI,MAAD,EAAQC,gBAAR,EAA2B;cACpEC,YAAYP,gBAAgBA,cAAcE,aAAd,EAA6BG,MAA7B,EAAqCC,gBAArC,CAAhB,GAAyE,EAAzF;iBACOL,6BAAC,aAAD,eAAmBM,SAAnB,IAA8B,UAAW;qBAAed,MAAMe,QAAN,CAC7D,EAAED,oBAAF,EAAaE,wBAAb,EAA0BX,sBAA1B,EAAsCI,4BAAtC,EAAqDE,4BAArD,EAAoEE,kCAApE,EAD6D,CAAf;aAAzC,IAAP;;OAFF;;GALN;CAZF;;;AA8BAd,aAAakB,YAAb,GAA4B;oBACP;QAAGF,QAAH,QAAGA,QAAH;WAAgBP;oBAAA;;;KAAhB;GADO;qBAEN,2BAACR,KAAD;WAASA,MAAMG,iBAAN,GAA0BH,MAAMkB,QAAhC,GAA2ClB,MAAMe,QAAN,CAAe,IAAf,CAApD;GAFM;kBAGT,wBAACf,KAAD;WAASA,MAAMmB,cAAN,GAAuBnB,MAAMoB,KAA7B,GAAsCpB,MAAMe,QAAN,CAAe,IAAf,EAAoB,IAApB,CAA/C;GAHS;iBAIV,uBAACf,KAAD;WAASA,MAAMO,aAAN,GAAsBP,MAAMqB,MAA5B,GAAqCrB,MAAMe,QAAN,CAAef,KAAf,CAA9C;;CAJlB;;AAOAD,aAAauB,SAAb,GAAyB;oBACJC,UAAUC,IADN;qBAEHD,UAAUC,IAFP;qBAGHD,UAAUC,IAHP;kBAIND,UAAUC,IAJJ;cAKVD,UAAUE,MALA;iBAMPF,UAAUC,IANH;iBAOPD,UAAUC;CAP5B;;;;"}